<?php
/**
 * Genesis Framework.
 *
 * WARNING: This file is part of the core Genesis Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package Genesis\Templates
 * @author  StudioPress
 * @license GPL-2.0-or-later
 * @link    https://my.studiopress.com/themes/genesis/
 */

add_action('genesis_before_loop', 'genesis_do_search_title');
/**
 * Echo the title with the search term.
 *
 * @since 1.9.0
 */
function genesis_do_search_title()
{
  $title = sprintf(
    '<div class="searchContainer container"><div class="row"><div class="column"><div class="archive-description"><h1 class="archive-title">%s %s</h1></div></div></div></div>',
    apply_filters(
      'genesis_search_title_text',
      __('Search Results for:', 'genesis')
    ),
    get_search_query()
  );

  echo apply_filters('genesis_search_title_output', $title) . "\n"; // phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped
}

remove_action('genesis_site_title', 'genesis_seo_site_title');

//* Remove navigation
remove_theme_support('genesis-menus');

// Removes site header elements.
remove_action('genesis_header', 'genesis_header_markup_open', 5);
remove_action('genesis_header', 'genesis_header_markup_close', 15);
remove_action('genesis_header', 'genesis_do_header');
remove_action('genesis_entry_header', 'genesis_do_post_title');
remove_action('genesis_entry_header', 'genesis_post_info', 12);
remove_action('genesis_entry_footer', 'genesis_post_meta', 10);
// add_action('genesis_entry_footer', 'genesis_post_info', 10);
remove_action(
  'genesis_before_loop',
  'genesis_do_taxonomy_title_description',
  15
);
remove_action('genesis_footer', 'genesis_do_footer');
remove_action('genesis_footer', 'genesis_footer_markup_open', 5);
remove_action('genesis_footer', 'genesis_footer_markup_close', 15);

add_action('genesis_header', 'add_header');
function add_header()
{
  $headerTemplate =
    'templates/header-v1';
  get_template_part($headerTemplate);
}

add_action('genesis_footer', 'add_footer');
function add_footer()
{
  get_template_part('templates/footer', 'add_copyright');
}

/* Remove the default loop */
remove_action('genesis_loop', 'genesis_do_loop');
add_action('genesis_loop', 'FCBP_do_search_loop');

/**
 * Outputs a custom loop
 *
 * @global mixed $paged current page number if paginated
 * @return void
 */
function FCBP_do_search_loop()
{
  // create an array variable with specific post types in your desired order
  // $post_types = array('news','article', 'page', 'post' ); // other custom post type can be added.
  $post_types = ['page', 'post' ]; // other custom post type can be added.

  echo '<div class="resultsContainer container">';

  foreach ($post_types as $post_type) {
    // get the search term entered by user
    $s = isset($_GET["s"]) ? $_GET["s"] : "";

    // accepts any wp_query args
	// Supports Events manager events
    if ($post_type === 'event') {
      $args = [
        's' => $s,
        'post_type' => $post_type,
        'posts_per_page' => 8,
        'meta_query' => [
          'key' => '_event_start_date',
          'value' => date('Y-m-d'),
          'compare' => '>',
          'type' => 'DATE',
        ],
        'orderby' => 'meta_value_num',
        'order' => 'ASC',
        'meta_key' => '_event_start_date',
        'meta_value' => date('Y-m-d'),
        'meta_value_num' => current_time('timestamp'),
        'meta_compare' => '>=',
      ];
    } else {
      $args = [
        's' => $s,
        'post_type' => $post_type,
        'posts_per_page' => 8,
        'order' => 'ASC',
        'orderby' => 'title',
      ];
    }
	//Renaming the post type
    $newname;
    switch ($post_type) {
      case 'page':
        $newname = "Page";
        break;
      case 'post':
        $newname = "Post";
        break;

      default:
        $newname;
        break;
    }
    echo '<div class="row"><div class="col"><div class="post-type ' .
      $post_type .
      '"><div class="post-type-heading"><h2 class="search__postTypeTitle">' .
      ucfirst($newname) .
      's</h2></div></div></div>';
    echo '<div class="row">';
    // Change the class structure of the post excerpts
    add_filter('genesis_attr_entry', 'FCBP_alter_class_List');
    remove_action('genesis_entry_header', 'genesis_post_info', 12);
    add_action('genesis_entry_header', 'FCBP_add_post_title', 14);
    if ($post_type == 'event') {
      add_action('genesis_entry_header', 'FCBP_get_start_date', 13);
      add_filter('get_the_content_more_link', 'FCBP_event_link');
    } else {
      remove_action('genesis_entry_header', 'FCBP_get_start_date', 13);
      add_filter('get_the_content_more_link', 'FCBP_read_more_link');
    }
    remove_action('genesis_entry_content', 'genesis_do_post_content_nav', 12);
    remove_action('genesis_entry_content', 'genesis_do_post_permalink', 14);

    // force content limit
    add_filter(
      'genesis_pre_get_option_content_archive_limit',
      'FCBP_content_limit'
    );

    // modify the Content Limit read more link
    // add_filter( 'get_the_content_more_link', 'FCBP_read_more_link' );

    // force excerpts
    // add_filter( 'genesis_pre_get_option_content_archive', 'FCBP_show_excerpts' );

    // modify the length of post excerpts
    add_filter('excerpt_length', 'FCBP_excerpt_length');

    // remove entry footer
    remove_action(
      'genesis_entry_footer',
      'genesis_entry_footer_markup_open',
      5
    );
    remove_action(
      'genesis_entry_footer',
      'genesis_entry_footer_markup_close',
      15
    );
    remove_action('genesis_entry_footer', 'genesis_post_meta', 10);

    // remove archive pagination
    remove_action('genesis_after_endwhile', 'genesis_posts_nav');

    // custom genesis loop with the above query parameters and hooks
    
    if ($post_type === 'event') {
      genesis_custom_loop($args);
    } else {
      genesis_custom_loop($args);
    }
    echo '</div>';
  }

  echo '</div></div></div></div>'; // .search-content
}

function FCBP_content_limit()
{
  return '00'; // number of characters
}

function FCBP_read_more_link()
{
  return '<a class="more-link" href="' .
    get_permalink() .
    '">Continue Reading</a>';
}

function FCBP_show_excerpts()
{
  return 'excerpts';
}

function FCBP_excerpt_length($length)
{
  return 30; // pull first 30 words
}

function FCBP_alter_class_List($attributes)
{
  $attributes['class'] .= ' col-12';
  return $attributes;
}

function FCBP_add_post_image()
{
  global $post;
  $thumbId = wp_get_attachment_image_src(
    get_post_thumbnail_id($post->ID),
    'square500'
  )[0];
  if (!empty($thumbId)) {
    echo '<img class="search__postImage" src="' . $thumbId . '" alt="">';
  } else {
    echo '<img class="search__postImage" src="https://via.placeholder.com/500?text=Example+Image" alt="">';
  }

  return;
}

function FCBP_add_post_title()
{
  global $post;
  echo '<h4 class="search__postTitle">' . get_the_title($post->ID) . '</h4>';
  return;
}

function FCBP_get_start_date()
{
  global $post;
  $startDate = strtotime(get_post_meta($post->ID, '_event_start_date', true));
  $endDate = strtotime(get_post_meta($post->ID, '_event_end_date', true));
  $startTimeStamp = date('F j, Y', $startDate);
  $endTimeStamp = date('F j, Y', $endDate);

  if ($startDate != $endDate) {
    echo '<div class="search__eventDates">' .
      $startTimeStamp .
      ' - ' .
      $endTimeStamp .
      '</div>';
  } elseif ($startDate == $endDate) {
    // echo '<div class="search__eventDates">' . $startTimeStamp . '</div>';
    echo '<div class="search__postTitle">' . $startTimeStamp . '</div>';
  }

  return;
}

function FCBP_event_link()
{
  // return '... <div class="search__eventLink"><a class="wp-block-button__link" href="' .
  //   get_permalink() .
  //   '">View Event</a></div>';
  return '<a class="more-link" href="' .
  get_permalink() .
  '">View Event</a>';
}

genesis();
